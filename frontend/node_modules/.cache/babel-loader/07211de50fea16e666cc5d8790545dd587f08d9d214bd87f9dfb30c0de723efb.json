{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api'; // Adjust if your backend runs on a different port or URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Function to handle successful responses\nconst handleSuccess = response => {\n  return response;\n};\n\n// Function to handle error responses\nconst handleError = error => {\n  console.error(\"API Error:\", error);\n  return Promise.reject(error);\n};\n\n// Add response interceptors\napi.interceptors.response.use(handleSuccess, handleError);\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","handleSuccess","response","handleError","error","console","Promise","reject","interceptors","use"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api'; // Adjust if your backend runs on a different port or URL\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Function to handle successful responses\r\nconst handleSuccess = (response) => {\r\n    return response;\r\n};\r\n\r\n// Function to handle error responses\r\nconst handleError = (error) => {\r\n    console.error(\"API Error:\", error);\r\n    return Promise.reject(error);\r\n};\r\n\r\n// Add response interceptors\r\napi.interceptors.response.use(handleSuccess, handleError);\r\n\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMC,aAAa,GAAIC,QAAQ,IAAK;EAChC,OAAOA,QAAQ;AACnB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC3BC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CAAC;;AAED;AACAP,GAAG,CAACW,YAAY,CAACN,QAAQ,CAACO,GAAG,CAACR,aAAa,EAAEE,WAAW,CAAC;AAGzD,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}