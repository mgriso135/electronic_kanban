{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\dashboards\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport KanbanCard from '../kanbans/KanbanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const {\n    customerId\n  } = useParams();\n  const [kanbansByProduct, setKanbansByProduct] = useState({});\n  const [availableCustomers, setAvailableCustomers] = useState([]);\n  const [selectedCustomerId, setSelectedCustomerId] = useState(customerId || '');\n  useEffect(() => {\n    const fetchCustomersAndKanbans = async () => {\n      try {\n        const accountsResponse = await api.get('/accounts');\n        // Filter for customers only\n        const customers = accountsResponse.data;\n        setAvailableCustomers(customers);\n        if (selectedCustomerId) {\n          const kanbanResponse = await api.get(`/dashboards/customer/${selectedCustomerId}`);\n          let kanbans = kanbanResponse.data.kanbans_by_product;\n          for (const product in kanbans) {\n            kanbans[product].sort((a, b) => {\n              const aMatch = a.customer_supplier === 2 ? -1 : 1; // Move matching to front\n              const bMatch = b.customer_supplier === 2 ? -1 : 1; // Move matching to front\n              if (aMatch !== bMatch) {\n                return aMatch - bMatch;\n              }\n              return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\n            });\n          }\n          setKanbansByProduct(kanbans);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data for customer dashboard\", error);\n      }\n    };\n    fetchCustomersAndKanbans();\n  }, [selectedCustomerId]);\n  const handleCustomerChange = e => {\n    setSelectedCustomerId(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Customer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCustomerId,\n        onChange: handleCustomerChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), availableCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: customer.id,\n          children: customer.name\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this), Object.keys(kanbansByProduct).length > 0 ? Object.keys(kanbansByProduct).map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: kanbansByProduct[product].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          dashboardType: \"customer\",\n          setKanbans: setKanbansByProduct\n        }, kanban.kanban_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, product, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a customer to view Kanban data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerDashboard, \"UI73Ql4mqnbqypzfQ+hQ6hbOz+k=\", false, function () {\n  return [useParams];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","KanbanCard","jsxDEV","_jsxDEV","CustomerDashboard","_s","customerId","kanbansByProduct","setKanbansByProduct","availableCustomers","setAvailableCustomers","selectedCustomerId","setSelectedCustomerId","fetchCustomersAndKanbans","accountsResponse","get","customers","data","kanbanResponse","kanbans","kanbans_by_product","product","sort","a","b","aMatch","customer_supplier","bMatch","Date","data_aggiornamento","error","console","handleCustomerChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","customer","id","name","Object","keys","length","style","display","flexWrap","gap","kanban","dashboardType","setKanbans","kanban_id","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/dashboards/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport KanbanCard from '../kanbans/KanbanCard';\r\n\r\nconst CustomerDashboard = () => {\r\n    const { customerId } = useParams();\r\n    const [kanbansByProduct, setKanbansByProduct] = useState({});\r\n  const [availableCustomers, setAvailableCustomers] = useState([]);\r\n  const [selectedCustomerId, setSelectedCustomerId] = useState(customerId || '');\r\n\r\n\r\n    useEffect(() => {\r\n    const fetchCustomersAndKanbans = async () => {\r\n        try {\r\n            const accountsResponse = await api.get('/accounts');\r\n            // Filter for customers only\r\n            const customers = accountsResponse.data;\r\n            setAvailableCustomers(customers);\r\n\r\n\r\n                if (selectedCustomerId) {\r\n                    const kanbanResponse = await api.get(`/dashboards/customer/${selectedCustomerId}`);\r\n                    let kanbans = kanbanResponse.data.kanbans_by_product;\r\n\r\n\r\n                     for (const product in kanbans) {\r\n                        kanbans[product].sort((a, b) => {\r\n                             const aMatch = a.customer_supplier === 2 ? -1 : 1; // Move matching to front\r\n                             const bMatch = b.customer_supplier === 2 ? -1 : 1; // Move matching to front\r\n                             if (aMatch !== bMatch) {\r\n                              return aMatch - bMatch;\r\n                            }\r\n                            return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\r\n                        });\r\n                     }\r\n                    setKanbansByProduct(kanbans);\r\n\r\n                }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data for customer dashboard\", error);\r\n        }\r\n    };\r\n        fetchCustomersAndKanbans();\r\n    }, [selectedCustomerId]);\r\n\r\n    const handleCustomerChange = (e) => {\r\n        setSelectedCustomerId(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Customer Dashboard</h2>\r\n           <div>\r\n                <label>Select Customer:</label>\r\n                <select value={selectedCustomerId} onChange={handleCustomerChange}>\r\n                <option value=\"\">Select a Customer</option>\r\n                    {availableCustomers.map(customer => (\r\n                        <option key={customer.id} value={customer.id}>{customer.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {Object.keys(kanbansByProduct).length > 0 ? (\r\n                Object.keys(kanbansByProduct).map(product => (\r\n                    <div key={product}>\r\n                        <h3>{product}</h3>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px'}}>\r\n                         {kanbansByProduct[product].map(kanban => (\r\n                            <KanbanCard key={kanban.kanban_id} kanban={kanban} dashboardType=\"customer\" setKanbans={setKanbansByProduct} />\r\n                         ))}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n            ) : (\r\n                <p>Please select a customer to view Kanban data</p>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}