{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\dashboards\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport KanbanCard from '../kanbans/KanbanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const {\n    customerId\n  } = useParams();\n  const [kanbansByProduct, setKanbansByProduct] = useState({});\n  const [availableCustomers, setAvailableCustomers] = useState([]);\n  const [selectedCustomerId, setSelectedCustomerId] = useState(customerId || '');\n  useEffect(() => {\n    fetchCustomersAndKanbans();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCustomerId]);\n  const fetchCustomersAndKanbans = async () => {\n    try {\n      const accountsResponse = await api.get('/accounts');\n      const customers = accountsResponse.data;\n      setAvailableCustomers(customers);\n      if (selectedCustomerId) {\n        const kanbanResponse = await api.get(`/dashboards/customer/${selectedCustomerId}`);\n        let kanbans = kanbanResponse.data.kanbans_by_product;\n        kanbans = sortKanbansByCustomerSupplierAndDate(kanbans); // Sort kanbans\n        setKanbansByProduct(kanbans);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for customer dashboard\", error);\n    }\n  };\n  const handleCustomerChange = e => {\n    setSelectedCustomerId(e.target.value);\n  };\n  const sortKanbansByCustomerSupplierAndDate = kanbans => {\n    const sortedKanbans = {\n      ...kanbans\n    }; // Create a copy to avoid modifying original\n    for (const product in sortedKanbans) {\n      sortedKanbans[product].sort((a, b) => {\n        const aMatch = a.customer_supplier === 2 ? -1 : 1; // Customer role is 2\n        const bMatch = b.customer_supplier === 2 ? -1 : 1; // Customer role is 2\n        if (aMatch !== bMatch) {\n          return aMatch - bMatch;\n        }\n        return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento);\n      });\n    }\n    return sortedKanbans;\n  };\n  const handleKanbanUpdate = updatedKanbansForProduct => {\n    // After KanbanCard updates status, this function is called to re-sort and update state\n    const sortedKanbans = sortKanbansByCustomerSupplierAndDate(updatedKanbansForProduct);\n    setKanbansByProduct(sortedKanbans);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Customer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCustomerId,\n        onChange: handleCustomerChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), availableCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: customer.id,\n          children: customer.name\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), Object.keys(kanbansByProduct).length > 0 ? Object.keys(kanbansByProduct).map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: kanbansByProduct[product].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          dashboardType: \"customer\",\n          setKanbans: handleKanbanUpdate // Pass handleKanbanUpdate\n          ,\n          productID: product // Pass productID\n        }, kanban.kanban_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)]\n    }, product, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a customer to view Kanban data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerDashboard, \"UI73Ql4mqnbqypzfQ+hQ6hbOz+k=\", false, function () {\n  return [useParams];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","KanbanCard","jsxDEV","_jsxDEV","CustomerDashboard","_s","customerId","kanbansByProduct","setKanbansByProduct","availableCustomers","setAvailableCustomers","selectedCustomerId","setSelectedCustomerId","fetchCustomersAndKanbans","accountsResponse","get","customers","data","kanbanResponse","kanbans","kanbans_by_product","sortKanbansByCustomerSupplierAndDate","error","console","handleCustomerChange","e","target","value","sortedKanbans","product","sort","a","b","aMatch","customer_supplier","bMatch","Date","data_aggiornamento","handleKanbanUpdate","updatedKanbansForProduct","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","customer","id","name","Object","keys","length","style","display","flexWrap","gap","kanban","dashboardType","setKanbans","productID","kanban_id","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/dashboards/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport KanbanCard from '../kanbans/KanbanCard';\r\n\r\nconst CustomerDashboard = () => {\r\n    const { customerId } = useParams();\r\n    const [kanbansByProduct, setKanbansByProduct] = useState({});\r\n    const [availableCustomers, setAvailableCustomers] = useState([]);\r\n    const [selectedCustomerId, setSelectedCustomerId] = useState(customerId || '');\r\n\r\n    useEffect(() => {\r\n        fetchCustomersAndKanbans();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedCustomerId]);\r\n\r\n    const fetchCustomersAndKanbans = async () => {\r\n        try {\r\n            const accountsResponse = await api.get('/accounts');\r\n            const customers = accountsResponse.data;\r\n            setAvailableCustomers(customers);\r\n\r\n            if (selectedCustomerId) {\r\n                const kanbanResponse = await api.get(`/dashboards/customer/${selectedCustomerId}`);\r\n                let kanbans = kanbanResponse.data.kanbans_by_product;\r\n                kanbans = sortKanbansByCustomerSupplierAndDate(kanbans); // Sort kanbans\r\n                setKanbansByProduct(kanbans);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching data for customer dashboard\", error);\r\n        }\r\n    };\r\n\r\n    const handleCustomerChange = (e) => {\r\n        setSelectedCustomerId(e.target.value);\r\n    };\r\n\r\n\r\n    const sortKanbansByCustomerSupplierAndDate = (kanbans) => {\r\n        const sortedKanbans = { ...kanbans }; // Create a copy to avoid modifying original\r\n        for (const product in sortedKanbans) {\r\n            sortedKanbans[product].sort((a, b) => {\r\n                const aMatch = a.customer_supplier === 2 ? -1 : 1; // Customer role is 2\r\n                const bMatch = b.customer_supplier === 2 ? -1 : 1; // Customer role is 2\r\n                if (aMatch !== bMatch) {\r\n                    return aMatch - bMatch;\r\n                }\r\n                return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento);\r\n            });\r\n        }\r\n        return sortedKanbans;\r\n    };\r\n\r\n\r\n    const handleKanbanUpdate = (updatedKanbansForProduct) => {\r\n        // After KanbanCard updates status, this function is called to re-sort and update state\r\n        const sortedKanbans = sortKanbansByCustomerSupplierAndDate(updatedKanbansForProduct);\r\n        setKanbansByProduct(sortedKanbans);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Customer Dashboard</h2>\r\n            <div>\r\n                <label>Select Customer:</label>\r\n                <select value={selectedCustomerId} onChange={handleCustomerChange}>\r\n                    <option value=\"\">Select a Customer</option>\r\n                    {availableCustomers.map(customer => (\r\n                        <option key={customer.id} value={customer.id}>{customer.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {Object.keys(kanbansByProduct).length > 0 ? (\r\n                Object.keys(kanbansByProduct).map(product => (\r\n                    <div key={product}>\r\n                        <h3>{product}</h3>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n                            {kanbansByProduct[product].map(kanban => (\r\n                                <KanbanCard\r\n                                    key={kanban.kanban_id}\r\n                                    kanban={kanban}\r\n                                    dashboardType=\"customer\"\r\n                                    setKanbans={handleKanbanUpdate} // Pass handleKanbanUpdate\r\n                                    productID={product} // Pass productID\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Please select a customer to view Kanban data</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}