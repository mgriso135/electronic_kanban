{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\dashboards\\\\SupplierDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport KanbanCard from '../kanbans/KanbanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplierDashboard = () => {\n  _s();\n  const {\n    supplierId\n  } = useParams();\n  const [kanbansByProduct, setKanbansByProduct] = useState({});\n  const [availableSuppliers, setAvailableSuppliers] = useState([]);\n  const [selectedSupplierId, setSelectedSupplierId] = useState(supplierId || '');\n  useEffect(() => {\n    fetchSuppliersAndKanbans();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedSupplierId]);\n  const fetchSuppliersAndKanbans = async () => {\n    try {\n      const accountsResponse = await api.get('/accounts');\n      // Filter for suppliers only\n      const suppliers = accountsResponse.data;\n      setAvailableSuppliers(suppliers);\n      if (selectedSupplierId) {\n        const kanbanResponse = await api.get(`/dashboards/supplier/${selectedSupplierId}`);\n        let kanbans = kanbanResponse.data.kanbans_by_product;\n        for (const product in kanbans) {\n          kanbans[product].sort((a, b) => {\n            const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\n            const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\n            if (aMatch !== bMatch) {\n              return aMatch - bMatch;\n            }\n            return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\n          });\n        }\n        setKanbansByProduct(kanbans);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for supplier dashboard\", error);\n    }\n  };\n  const handleSupplierChange = e => {\n    setSelectedSupplierId(e.target.value);\n  };\n  const sortKanbansByCustomerSupplierAndDate = useCallback(kanbans => {\n    const sortedKanbans = {\n      ...kanbans\n    }; // Create a copy to avoid modifying original\n    for (const product in sortedKanbans) {\n      sortedKanbans[product].sort((a, b) => {\n        const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\n        const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\n        if (aMatch !== bMatch) {\n          return aMatch - bMatch;\n        }\n        return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\n      });\n    }\n    return sortedKanbans;\n  }, []);\n  const handleKanbanUpdate = useCallback((updatedKanban, productID) => {\n    setKanbansByProduct(prevKanbansByProduct => {\n      const updatedKanbansByProduct = {\n        ...prevKanbansByProduct\n      };\n      updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\n        if (k.kanban_id === kanban.kanban_id) {\n          return {\n            ...k,\n            status_name: updatedKanban.status_name,\n            status_color: updatedKanban.status_color,\n            customer_supplier: updatedKanban.customer_supplier,\n            status_current: updatedKanban.status_current\n          };\n        } else {\n          return k;\n        }\n      });\n      return updatedKanbansByProduct;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supplier Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Supplier:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSupplierId,\n        onChange: handleSupplierChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Supplier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), availableSuppliers.map(supplier => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: supplier.id,\n          children: supplier.name\n        }, supplier.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this), Object.keys(kanbansByProduct).length > 0 ? Object.keys(kanbansByProduct).map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: kanbansByProduct[product].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          dashboardType: \"supplier\",\n          setKanbans: setKanbansByProduct,\n          productID: product\n        }, kanban.kanban_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this)]\n    }, product, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a supplier to view Kanban data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }, this);\n};\n_s(SupplierDashboard, \"w+xPY5lJuexMLpxfOrsHu6khcI0=\", false, function () {\n  return [useParams];\n});\n_c = SupplierDashboard;\nexport default SupplierDashboard;\nvar _c;\n$RefreshReg$(_c, \"SupplierDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","api","KanbanCard","jsxDEV","_jsxDEV","SupplierDashboard","_s","supplierId","kanbansByProduct","setKanbansByProduct","availableSuppliers","setAvailableSuppliers","selectedSupplierId","setSelectedSupplierId","fetchSuppliersAndKanbans","accountsResponse","get","suppliers","data","kanbanResponse","kanbans","kanbans_by_product","product","sort","a","b","aMatch","customer_supplier","bMatch","Date","data_aggiornamento","error","console","handleSupplierChange","e","target","value","sortKanbansByCustomerSupplierAndDate","sortedKanbans","handleKanbanUpdate","updatedKanban","productID","prevKanbansByProduct","updatedKanbansByProduct","map","k","kanban_id","kanban","status_name","status_color","status_current","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","supplier","id","name","Object","keys","length","style","display","flexWrap","gap","dashboardType","setKanbans","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/dashboards/SupplierDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport KanbanCard from '../kanbans/KanbanCard';\r\n\r\nconst SupplierDashboard = () => {\r\n    const { supplierId } = useParams();\r\n    const [kanbansByProduct, setKanbansByProduct] = useState({});\r\n    const [availableSuppliers, setAvailableSuppliers] = useState([]);\r\n    const [selectedSupplierId, setSelectedSupplierId] = useState(supplierId || '');\r\n\r\n\r\n    useEffect(() => {\r\n        fetchSuppliersAndKanbans();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedSupplierId]);\r\n\r\n    const fetchSuppliersAndKanbans = async () => {\r\n        try {\r\n            const accountsResponse = await api.get('/accounts');\r\n            // Filter for suppliers only\r\n            const suppliers = accountsResponse.data;\r\n            setAvailableSuppliers(suppliers);\r\n\r\n\r\n                if(selectedSupplierId){\r\n                    const kanbanResponse = await api.get(`/dashboards/supplier/${selectedSupplierId}`);\r\n                   let kanbans = kanbanResponse.data.kanbans_by_product;\r\n\r\n\r\n                    for (const product in kanbans) {\r\n                        kanbans[product].sort((a, b) => {\r\n                          const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                          const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                         if (aMatch !== bMatch) {\r\n                            return aMatch - bMatch;\r\n                           }\r\n                         return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\r\n                        });\r\n                     }\r\n\r\n                    setKanbansByProduct(kanbans);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Error fetching data for supplier dashboard\", error);\r\n            }\r\n        };\r\n\r\n        const handleSupplierChange = (e) => {\r\n            setSelectedSupplierId(e.target.value);\r\n        };\r\n\r\n\r\n        const sortKanbansByCustomerSupplierAndDate = useCallback((kanbans) => {\r\n            const sortedKanbans = { ...kanbans }; // Create a copy to avoid modifying original\r\n            for (const product in sortedKanbans) {\r\n                sortedKanbans[product].sort((a, b) => {\r\n                    const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                    const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                    if (aMatch !== bMatch) {\r\n                        return aMatch - bMatch;\r\n                    }\r\n                    return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\r\n                });\r\n            }\r\n            return sortedKanbans;\r\n        }, []);\r\n\r\n\r\n        const handleKanbanUpdate = useCallback((updatedKanban, productID) => {\r\n            setKanbansByProduct(prevKanbansByProduct => {\r\n                const updatedKanbansByProduct = { ...prevKanbansByProduct };\r\n                updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\r\n                    if (k.kanban_id === kanban.kanban_id) {\r\n                        return { ...k, status_name: updatedKanban.status_name, status_color: updatedKanban.status_color, customer_supplier: updatedKanban.customer_supplier, status_current: updatedKanban.status_current };\r\n                    } else {\r\n                        return k;\r\n                    }\r\n                });\r\n                return updatedKanbansByProduct;\r\n            });\r\n        }, []);\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h2>Supplier Dashboard</h2>\r\n\r\n              <div>\r\n                  <label>Select Supplier:</label>\r\n                <select value={selectedSupplierId} onChange={handleSupplierChange}>\r\n                    <option value=\"\">Select a Supplier</option>\r\n                    {availableSuppliers.map(supplier => (\r\n                        <option key={supplier.id} value={supplier.id}>{supplier.name}</option>\r\n                    ))}\r\n                </select>\r\n                </div>\r\n\r\n                {Object.keys(kanbansByProduct).length > 0 ? (\r\n                    Object.keys(kanbansByProduct).map(product => (\r\n                        <div key={product}>\r\n                            <h3>{product}</h3>\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px'}}>\r\n                            {kanbansByProduct[product].map(kanban => (\r\n                                <KanbanCard key={kanban.kanban_id} kanban={kanban} dashboardType=\"supplier\" setKanbans={setKanbansByProduct} productID={product} />\r\n                            ))}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Please select a supplier to view Kanban data</p>\r\n                 )}\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    export default SupplierDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}