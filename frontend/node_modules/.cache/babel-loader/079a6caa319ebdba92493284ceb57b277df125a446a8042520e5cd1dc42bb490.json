{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\kanbans\\\\KanbanCard.js\";\nimport React from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanCard = ({\n  kanban,\n  dashboardType,\n  setKanbans,\n  productID\n}) => {\n  const handleStatusChange = async () => {\n    console.log(\"KanbanCard - handleStatusChange CALLED - kanban_id:\", kanban.kanban_id, \"productID:\", productID); // Log at start\n    try {\n      console.log(\"KanbanCard - handleStatusChange: Making API call...\"); // Log before API call\n      const response = await api.put(`/kanbans/${kanban.kanban_id}`, {\n        status_current: parseInt(kanban.status_current, 10)\n      });\n      console.log(\"KanbanCard - handleStatusChange: API response received:\", response.data); // Log API response\n\n      if (dashboardType === \"supplier\" || dashboardType === \"customer\") {\n        // Combined logic for both dashboards\n        setKanbans(prevKanbansByProduct => {\n          console.log(`KanbanCard - setKanbans (${dashboardType} dashboard) CALLED with updatedKanban:`, response.data, `productID: (INSIDE CALLBACK - CHECK VALUE HERE):`, productID);\n          if (!prevKanbansByProduct[productID]) {\n            console.warn(`KanbanCard - setKanbans: productID \"${productID}\" not found in prevKanbansByProduct.`);\n            return prevKanbansByProduct || {}; // Return previous state to avoid errors\n          }\n          const updatedProductKanbans = prevKanbansByProduct[productID].map(k => {\n            if (k.kanban_id === kanban.kanban_id) {\n              return {\n                ...k,\n                status_name: response.data.status_name,\n                status_color: response.data.status_color,\n                customer_supplier: response.data.customer_supplier,\n                status_current: response.data.status_current\n              };\n            } else {\n              return k;\n            }\n          });\n\n          // Immutably update the state - create a new object and assign the updated product kanbans\n          const nextKanbansByProduct = {\n            ...prevKanbansByProduct,\n            [productID]: updatedProductKanbans\n          };\n          return nextKanbansByProduct; // Return the updated state\n        }, () => {\n          console.log(`KanbanCard - setKanbans (${dashboardType} dashboard) CALLBACK EXECUTED`);\n        });\n      }\n    } catch (error) {\n      console.error(\"KanbanCard - Error updating Kanban status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-card\",\n    style: {\n      borderColor: kanban.status_color,\n      borderWidth: '3px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: kanban.status_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Product:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), \" \", kanban.product_name, \" (ID: \", productID, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Container:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this), \" \", kanban.tipo_contenitore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), \" \", kanban.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), dashboardType === 'supplier' && kanban.customer_supplier === 1 || dashboardType === 'customer' && kanban.customer_supplier === 2 ?\n    /*#__PURE__*/\n    // Conditional rendering for button\n    _jsxDEV(\"button\", {\n      style: {\n        backgroundColor: kanban.status_color,\n        color: 'white',\n        padding: '10px'\n      },\n      onClick: handleStatusChange,\n      children: \"Change Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : null, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = KanbanCard;\nexport default KanbanCard;\nvar _c;\n$RefreshReg$(_c, \"KanbanCard\");","map":{"version":3,"names":["React","api","jsxDEV","_jsxDEV","KanbanCard","kanban","dashboardType","setKanbans","productID","handleStatusChange","console","log","kanban_id","response","put","status_current","parseInt","data","prevKanbansByProduct","warn","updatedProductKanbans","map","k","status_name","status_color","customer_supplier","nextKanbansByProduct","error","className","style","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","product_name","tipo_contenitore","quantity","backgroundColor","color","padding","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/kanbans/KanbanCard.js"],"sourcesContent":["import React from 'react';\r\nimport api from '../../services/api';\r\n\r\nconst KanbanCard = ({ kanban, dashboardType, setKanbans, productID }) => {\r\n\r\n    const handleStatusChange = async () => {\r\n        console.log(\"KanbanCard - handleStatusChange CALLED - kanban_id:\", kanban.kanban_id, \"productID:\", productID); // Log at start\r\n        try {\r\n            console.log(\"KanbanCard - handleStatusChange: Making API call...\"); // Log before API call\r\n            const response = await api.put(`/kanbans/${kanban.kanban_id}`, { status_current: parseInt(kanban.status_current, 10) });\r\n            console.log(\"KanbanCard - handleStatusChange: API response received:\", response.data); // Log API response\r\n\r\n            if (dashboardType === \"supplier\" || dashboardType === \"customer\") { // Combined logic for both dashboards\r\n                setKanbans(prevKanbansByProduct => {\r\n                    console.log(`KanbanCard - setKanbans (${dashboardType} dashboard) CALLED with updatedKanban:`, response.data, `productID: (INSIDE CALLBACK - CHECK VALUE HERE):`, productID);\r\n\r\n                    if (!prevKanbansByProduct[productID]) {\r\n                        console.warn(`KanbanCard - setKanbans: productID \"${productID}\" not found in prevKanbansByProduct.`);\r\n                        return prevKanbansByProduct || {}; // Return previous state to avoid errors\r\n                    }\r\n\r\n\r\n                    const updatedProductKanbans = prevKanbansByProduct[productID].map(k => {\r\n                        if (k.kanban_id === kanban.kanban_id) {\r\n                            return { ...k, status_name: response.data.status_name, status_color: response.data.status_color, customer_supplier: response.data.customer_supplier, status_current: response.data.status_current };\r\n                        } else {\r\n                            return k;\r\n                        }\r\n                    });\r\n\r\n                    // Immutably update the state - create a new object and assign the updated product kanbans\r\n                    const nextKanbansByProduct = {\r\n                        ...prevKanbansByProduct,\r\n                        [productID]: updatedProductKanbans,\r\n                    };\r\n\r\n                    return nextKanbansByProduct; // Return the updated state\r\n                }, () => {\r\n                    console.log(`KanbanCard - setKanbans (${dashboardType} dashboard) CALLBACK EXECUTED`);\r\n                });\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"KanbanCard - Error updating Kanban status\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kanban-card\" style={{ borderColor: kanban.status_color, borderWidth: '3px' }}>\r\n            <h2>{kanban.status_name}</h2>\r\n            <p><strong>Product:</strong> {kanban.product_name} (ID: {productID})</p>\r\n            <p><strong>Container:</strong> {kanban.tipo_contenitore}</p>\r\n            <p><strong>Quantity:</strong> {kanban.quantity}</p>\r\n            {dashboardType === 'supplier' && kanban.customer_supplier === 1 || dashboardType === 'customer' && kanban.customer_supplier === 2 ? ( // Conditional rendering for button\r\n                <button\r\n                    style={{ backgroundColor: kanban.status_color, color: 'white', padding: '10px' }}\r\n                    onClick={handleStatusChange}\r\n                >\r\n                    Change Status\r\n                </button>\r\n            ) : null} {/* Render nothing if not actionable */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KanbanCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}