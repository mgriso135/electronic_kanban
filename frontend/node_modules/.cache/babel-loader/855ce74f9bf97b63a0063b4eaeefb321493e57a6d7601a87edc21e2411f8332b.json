{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\kanbans\\\\KanbanCard.js\";\nimport React from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanCard = ({\n  kanban,\n  dashboardType,\n  setKanbans,\n  productID\n}) => {\n  const handleStatusChange = async () => {\n    console.log(\"KanbanCard - handleStatusChange CALLED for kanban_id:\", kanban.kanban_id, \"productID:\", productID); // Log at function start\n    try {\n      console.log(\"KanbanCard - handleStatusChange: Making API call...\"); // Log before API call\n      const response = await api.put(`/kanbans/${kanban.kanban_id}`, {\n        status_current: parseInt(kanban.status_current, 10)\n      });\n      console.log(\"KanbanCard - handleStatusChange: API response received:\", response); // Log API response\n\n      if (dashboardType === \"supplier\") {\n        setKanbans(updatedKanbans => {\n          // Changed param name for clarity\n          console.log(\"KanbanCard - setKanbans (supplier dashboard) CALLED with updatedKanban:\", response.data, \"productID:\", productID); // Log before setKanbans\n          const updatedKanbansByProduct = {\n            ...updatedKanbans\n          };\n          if (updatedKanbansByProduct[productID]) {\n            updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\n              if (k.kanban_id === kanban.kanban_id) {\n                return {\n                  ...k,\n                  status_name: response.data.status_name,\n                  status_color: response.data.status_color,\n                  customer_supplier: response.data.customer_supplier,\n                  status_current: response.data.status_current\n                };\n              } else {\n                return k;\n              }\n            });\n          }\n          return updatedKanbansByProduct;\n        }, () => {\n          console.log(\"KanbanCard - setKanbans (supplier dashboard) CALLBACK EXECUTED\"); // Log after setState\n        });\n      } else if (dashboardType === \"customer\") {\n        setKanbans(updatedKanbans => {\n          // Changed param name for clarity\n          console.log(\"KanbanCard - setKanbans (customer dashboard) CALLED with updatedKanban:\", response.data, \"productID:\", productID); // Log before setKanbans\n          const updatedKanbansByProduct = {\n            ...updatedKanbans\n          };\n          if (updatedKanbansByProduct[productID]) {\n            updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\n              if (k.kanban_id === kanban.kanban_id) {\n                return {\n                  ...k,\n                  status_name: response.data.status_name,\n                  status_color: response.data.status_color,\n                  customer_supplier: response.data.customer_supplier,\n                  status_current: response.data.status_current\n                };\n              } else {\n                return k;\n              }\n            });\n          }\n          return updatedKanbansByProduct;\n        }, () => {\n          console.log(\"KanbanCard - setKanbans (customer dashboard) CALLBACK EXECUTED\"); // Log after setState\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating Kanban status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-card\",\n    style: {\n      borderColor: kanban.status_color,\n      borderWidth: '3px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: kanban.status_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Product:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this), \" \", kanban.product_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Container:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), \" \", kanban.tipo_contenitore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this), \" \", kanban.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), dashboardType === 'supplier' && kanban.customer_supplier === 1 || dashboardType === 'customer' && kanban.customer_supplier === 2 ?\n    /*#__PURE__*/\n    // Conditional rendering for button\n    _jsxDEV(\"button\", {\n      style: {\n        backgroundColor: kanban.status_color,\n        color: 'white',\n        padding: '10px'\n      },\n      onClick: handleStatusChange,\n      children: \"Change Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : null, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = KanbanCard;\nexport default KanbanCard;\nvar _c;\n$RefreshReg$(_c, \"KanbanCard\");","map":{"version":3,"names":["React","api","jsxDEV","_jsxDEV","KanbanCard","kanban","dashboardType","setKanbans","productID","handleStatusChange","console","log","kanban_id","response","put","status_current","parseInt","updatedKanbans","data","updatedKanbansByProduct","map","k","status_name","status_color","customer_supplier","error","className","style","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","product_name","tipo_contenitore","quantity","backgroundColor","color","padding","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/kanbans/KanbanCard.js"],"sourcesContent":["import React from 'react';\r\nimport api from '../../services/api';\r\n\r\nconst KanbanCard = ({ kanban, dashboardType, setKanbans, productID }) => {\r\n\r\n    const handleStatusChange = async () => {\r\n        console.log(\"KanbanCard - handleStatusChange CALLED for kanban_id:\", kanban.kanban_id, \"productID:\", productID); // Log at function start\r\n        try {\r\n            console.log(\"KanbanCard - handleStatusChange: Making API call...\"); // Log before API call\r\n            const response = await api.put(`/kanbans/${kanban.kanban_id}`, { status_current: parseInt(kanban.status_current, 10) });\r\n            console.log(\"KanbanCard - handleStatusChange: API response received:\", response); // Log API response\r\n\r\n            if (dashboardType === \"supplier\") {\r\n                setKanbans(updatedKanbans => { // Changed param name for clarity\r\n                    console.log(\"KanbanCard - setKanbans (supplier dashboard) CALLED with updatedKanban:\", response.data, \"productID:\", productID); // Log before setKanbans\r\n                    const updatedKanbansByProduct = { ...updatedKanbans };\r\n                    if (updatedKanbansByProduct[productID]) {\r\n                        updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\r\n                            if (k.kanban_id === kanban.kanban_id) {\r\n                                return { ...k, status_name: response.data.status_name, status_color: response.data.status_color, customer_supplier: response.data.customer_supplier, status_current: response.data.status_current };\r\n                            } else {\r\n                                return k;\r\n                            }\r\n                        });\r\n                    }\r\n                    return updatedKanbansByProduct;\r\n                }, () => {\r\n                    console.log(\"KanbanCard - setKanbans (supplier dashboard) CALLBACK EXECUTED\"); // Log after setState\r\n                });\r\n            } else if (dashboardType === \"customer\") {\r\n                setKanbans(updatedKanbans => { // Changed param name for clarity\r\n                    console.log(\"KanbanCard - setKanbans (customer dashboard) CALLED with updatedKanban:\", response.data, \"productID:\", productID); // Log before setKanbans\r\n                    const updatedKanbansByProduct = { ...updatedKanbans };\r\n                    if (updatedKanbansByProduct[productID]) {\r\n                        updatedKanbansByProduct[productID] = updatedKanbansByProduct[productID].map(k => {\r\n                            if (k.kanban_id === kanban.kanban_id) {\r\n                                return { ...k, status_name: response.data.status_name, status_color: response.data.status_color, customer_supplier: response.data.customer_supplier, status_current: response.data.status_current };\r\n                            } else {\r\n                                return k;\r\n                            }\r\n                        });\r\n                    }\r\n                    return updatedKanbansByProduct;\r\n                }, () => {\r\n                    console.log(\"KanbanCard - setKanbans (customer dashboard) CALLBACK EXECUTED\"); // Log after setState\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating Kanban status\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kanban-card\" style={{ borderColor: kanban.status_color, borderWidth: '3px' }}>\r\n            <h2>{kanban.status_name}</h2>  {/* Status name as main title, using <h2> */}\r\n            <p><strong>Product:</strong> {kanban.product_name}</p>\r\n            <p><strong>Container:</strong> {kanban.tipo_contenitore}</p>\r\n            <p><strong>Quantity:</strong> {kanban.quantity}</p>\r\n            {dashboardType === 'supplier' && kanban.customer_supplier === 1 || dashboardType === 'customer' && kanban.customer_supplier === 2 ? ( // Conditional rendering for button\r\n                <button\r\n                    style={{ backgroundColor: kanban.status_color, color: 'white', padding: '10px' }}\r\n                    onClick={handleStatusChange}\r\n                >\r\n                    Change Status\r\n                </button>\r\n            ) : null} {/* Render nothing if not actionable */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KanbanCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}