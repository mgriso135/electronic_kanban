{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgris\\\\Documents\\\\electronic_kanban\\\\frontend\\\\src\\\\components\\\\dashboards\\\\SupplierDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n//import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../../services/api';\nimport KanbanCard from '../kanbans/KanbanCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplierDashboard = () => {\n  _s();\n  const {\n    supplierId\n  } = useParams();\n  const [kanbansByProduct, setKanbansByProduct] = useState({});\n  const [availableSuppliers, setAvailableSuppliers] = useState([]);\n  const [selectedSupplierId, setSelectedSupplierId] = useState(supplierId || '');\n  const [isLoading, setIsLoading] = useState(false); // Keep isLoading state INTERNALLY\n\n  useEffect(() => {\n    fetchSuppliersAndKanbans();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedSupplierId]);\n  const fetchSuppliersAndKanbans = async () => {\n    setIsLoading(true); // Set loading to true at start\n    try {\n      const accountsResponse = await api.get('/accounts');\n      // Filter for suppliers only\n      const suppliers = accountsResponse.data;\n      setAvailableSuppliers(suppliers);\n      const initialSupplierId = supplierId || (suppliers.length > 0 ? suppliers[0].id : '');\n      setSelectedSupplierId(initialSupplierId);\n      if (initialSupplierId) {\n        const kanbanResponse = await api.get(`/dashboards/supplier/${initialSupplierId}`);\n        let kanbans = kanbanResponse.data.kanbans_by_product;\n        kanbans = sortKanbansByCustomerSupplierAndDate(kanbans);\n        setKanbansByProduct(kanbans);\n      } else {\n        setKanbansByProduct({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching data for supplier dashboard\", error);\n    } finally {\n      setIsLoading(false); // Set loading to false in finally block\n    }\n  };\n  const handleSupplierChange = e => {\n    const newSupplierId = e.target.value;\n    setSelectedSupplierId(newSupplierId);\n    if (newSupplierId) {\n      navigate(`/supplier-dashboard/${newSupplierId}`);\n    } else {\n      navigate(`/supplier-dashboard`);\n    }\n  };\n  const sortKanbansByCustomerSupplierAndDate = useCallback(kanbans => {\n    const sortedKanbans = {\n      ...kanbans\n    }; // Create a copy to avoid modifying original\n    for (const product in sortedKanbans) {\n      sortedKanbans[product].sort((a, b) => {\n        const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\n        const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\n        if (aMatch !== bMatch) {\n          return aMatch - bMatch;\n        }\n        return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\n      });\n    }\n    return sortedKanbans;\n  }, []);\n  const handleKanbanUpdate = useCallback((updatedKanban, productID) => {\n    // **ADD CONDITIONAL CHECK AT THE VERY BEGINNING:**\n    if (!kanbansByProduct || !kanbansByProduct[productID] || !Array.isArray(kanbansByProduct[productID])) {\n      console.warn(\"handleKanbanUpdate: Data not ready, aborting update. productID:\", productID);\n      return; // ABORT FUNCTION IF DATA IS NOT READY\n    }\n    setKanbansByProduct(prevKanbansByProduct => {\n      // Safety checks (already present - keep them, but they might be redundant now)\n      if (!prevKanbansByProduct || !prevKanbansByProduct[productID] || !Array.isArray(prevKanbansByProduct[productID])) {\n        console.warn(\"handleKanbanUpdate: prevKanbansByProduct or product data is not properly initialized yet (inside setState). This should not happen frequently now.\");\n        return prevKanbansByProduct || {}; // Redundant safety return, but keep it.\n      }\n      const updatedProductKanbans = prevKanbansByProduct[productID].map(k => k.kanban_id === updatedKanban.kanban_id ? updatedKanban : k);\n      const nextKanbansByProduct = {\n        ...prevKanbansByProduct\n      };\n      nextKanbansByProduct[productID] = sortKanbansByCustomerSupplierAndDate({\n        [productID]: updatedProductKanbans\n      })[productID];\n      return nextKanbansByProduct;\n    });\n  }, [sortKanbansByCustomerSupplierAndDate]); // Dependency array includes sort function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supplier Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Supplier:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSupplierId,\n        onChange: handleSupplierChange,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Supplier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), availableSuppliers.map(supplier => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: supplier.id,\n          children: supplier.name\n        }, supplier.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), selectedSupplierId && Object.keys(kanbansByProduct).length > 0 ?\n    // Conditionally render kanban data\n    Object.keys(kanbansByProduct).map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: kanbansByProduct[product].map(kanban => /*#__PURE__*/_jsxDEV(KanbanCard, {\n          kanban: kanban,\n          dashboardType: \"supplier\",\n          setKanbans: handleKanbanUpdate // Pass handleKanbanUpdate\n          ,\n          productID: product\n        }, kanban.kanban_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this)]\n    }, product, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this)) : selectedSupplierId ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Kanban data found for this supplier.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a supplier to view Kanban data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 87\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(SupplierDashboard, \"cvqYi/j1d3qOkZSuvKBCyKDrXMk=\", true);\n_c = SupplierDashboard;\nexport default SupplierDashboard;\nvar _c;\n$RefreshReg$(_c, \"SupplierDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","api","KanbanCard","jsxDEV","_jsxDEV","SupplierDashboard","_s","supplierId","useParams","kanbansByProduct","setKanbansByProduct","availableSuppliers","setAvailableSuppliers","selectedSupplierId","setSelectedSupplierId","isLoading","setIsLoading","fetchSuppliersAndKanbans","accountsResponse","get","suppliers","data","initialSupplierId","length","id","kanbanResponse","kanbans","kanbans_by_product","sortKanbansByCustomerSupplierAndDate","error","console","handleSupplierChange","e","newSupplierId","target","value","navigate","sortedKanbans","product","sort","a","b","aMatch","customer_supplier","bMatch","Date","data_aggiornamento","handleKanbanUpdate","updatedKanban","productID","Array","isArray","warn","prevKanbansByProduct","updatedProductKanbans","map","k","kanban_id","nextKanbansByProduct","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","supplier","name","Object","keys","style","display","flexWrap","gap","kanban","dashboardType","setKanbans","_c","$RefreshReg$"],"sources":["C:/Users/mgris/Documents/electronic_kanban/frontend/src/components/dashboards/SupplierDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n//import { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport KanbanCard from '../kanbans/KanbanCard';\r\n\r\nconst SupplierDashboard = () => {\r\n    const { supplierId } = useParams();\r\n    const [kanbansByProduct, setKanbansByProduct] = useState({});\r\n    const [availableSuppliers, setAvailableSuppliers] = useState([]);\r\n    const [selectedSupplierId, setSelectedSupplierId] = useState(supplierId || '');\r\n    const [isLoading, setIsLoading] = useState(false); // Keep isLoading state INTERNALLY\r\n\r\n    useEffect(() => {\r\n        fetchSuppliersAndKanbans();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedSupplierId]);\r\n\r\n    const fetchSuppliersAndKanbans = async () => {\r\n        setIsLoading(true); // Set loading to true at start\r\n        try {\r\n            const accountsResponse = await api.get('/accounts');\r\n            // Filter for suppliers only\r\n            const suppliers = accountsResponse.data;\r\n            setAvailableSuppliers(suppliers);\r\n\r\n            const initialSupplierId = supplierId || (suppliers.length > 0 ? suppliers[0].id : '');\r\n            setSelectedSupplierId(initialSupplierId);\r\n\r\n            if (initialSupplierId) {\r\n                const kanbanResponse = await api.get(`/dashboards/supplier/${initialSupplierId}`);\r\n                let kanbans = kanbanResponse.data.kanbans_by_product;\r\n                kanbans = sortKanbansByCustomerSupplierAndDate(kanbans);\r\n                setKanbansByProduct(kanbans);\r\n            } else {\r\n                setKanbansByProduct({});\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data for supplier dashboard\", error);\r\n        } finally {\r\n            setIsLoading(false); // Set loading to false in finally block\r\n        }\r\n    };\r\n\r\n    const handleSupplierChange = (e) => {\r\n        const newSupplierId = e.target.value;\r\n        setSelectedSupplierId(newSupplierId);\r\n\r\n        if (newSupplierId) {\r\n            navigate(`/supplier-dashboard/${newSupplierId}`);\r\n        } else {\r\n            navigate(`/supplier-dashboard`);\r\n        }\r\n    };\r\n\r\n\r\n    const sortKanbansByCustomerSupplierAndDate = useCallback((kanbans) => {\r\n        const sortedKanbans = { ...kanbans }; // Create a copy to avoid modifying original\r\n        for (const product in sortedKanbans) {\r\n            sortedKanbans[product].sort((a, b) => {\r\n                const aMatch = a.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                const bMatch = b.customer_supplier === 1 ? -1 : 1; // Move matching to front\r\n                if (aMatch !== bMatch) {\r\n                    return aMatch - bMatch;\r\n                }\r\n                return new Date(a.data_aggiornamento) - new Date(b.data_aggiornamento); // Sort by date\r\n            });\r\n        }\r\n        return sortedKanbans;\r\n    }, []);\r\n\r\n    const handleKanbanUpdate = useCallback((updatedKanban, productID) => {\r\n        // **ADD CONDITIONAL CHECK AT THE VERY BEGINNING:**\r\n        if (!kanbansByProduct || !kanbansByProduct[productID] || !Array.isArray(kanbansByProduct[productID])) {\r\n            console.warn(\"handleKanbanUpdate: Data not ready, aborting update. productID:\", productID);\r\n            return; // ABORT FUNCTION IF DATA IS NOT READY\r\n        }\r\n\r\n\r\n        setKanbansByProduct(prevKanbansByProduct => {\r\n            // Safety checks (already present - keep them, but they might be redundant now)\r\n            if (!prevKanbansByProduct || !prevKanbansByProduct[productID] || !Array.isArray(prevKanbansByProduct[productID])) {\r\n                console.warn(\"handleKanbanUpdate: prevKanbansByProduct or product data is not properly initialized yet (inside setState). This should not happen frequently now.\");\r\n                return prevKanbansByProduct || {}; // Redundant safety return, but keep it.\r\n            }\r\n\r\n            const updatedProductKanbans = prevKanbansByProduct[productID].map(k =>\r\n                k.kanban_id === updatedKanban.kanban_id ? updatedKanban : k\r\n            );\r\n            const nextKanbansByProduct = { ...prevKanbansByProduct };\r\n            nextKanbansByProduct[productID] = sortKanbansByCustomerSupplierAndDate({ [productID]: updatedProductKanbans })[productID];\r\n            return nextKanbansByProduct;\r\n        });\r\n    }, [sortKanbansByCustomerSupplierAndDate]); // Dependency array includes sort function\r\n\r\n    return (\r\n        <div>\r\n            <h2>Supplier Dashboard</h2>\r\n\r\n            <div>\r\n                <label>Select Supplier:</label>\r\n                <select value={selectedSupplierId} onChange={handleSupplierChange} disabled={isLoading}>\r\n                    <option value=\"\">Select a Supplier</option>\r\n                    {availableSuppliers.map(supplier => (\r\n                        <option key={supplier.id} value={supplier.id}>{supplier.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {selectedSupplierId && Object.keys(kanbansByProduct).length > 0 ? ( // Conditionally render kanban data\r\n                Object.keys(kanbansByProduct).map(product => (\r\n                    <div key={product}>\r\n                        <h3>{product}</h3>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n                            {kanbansByProduct[product].map(kanban => (\r\n                                <KanbanCard\r\n                                    key={kanban.kanban_id}\r\n                                    kanban={kanban}\r\n                                    dashboardType=\"supplier\"\r\n                                    setKanbans={handleKanbanUpdate} // Pass handleKanbanUpdate\r\n                                    productID={product}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                selectedSupplierId ? <p>No Kanban data found for this supplier.</p> : <p>Please select a supplier to view Kanban data</p>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SupplierDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}